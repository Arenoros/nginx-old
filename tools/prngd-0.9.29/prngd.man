.\" Automatically generated by Pod::Man version 1.15
.\" Tue Jul 13 09:11:19 2004
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "PRNGD 1"
.TH PRNGD 1 "" "2002-05-17" ""
.UC
.SH "NAME"
prngd \- Pseudo Random Number Generator Daemon
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBprngd\fR
[ \fIcommand_opts\fR ]
\&\fI/path/to/socket\fR
[ \fI/path/to/other_socket\fR ]
.PP
\&\fBprngd\fR
\&\fI\-k/\-\-killmode\fR
\&\fI/path/to/socket\fR
[ \fI/path/to/other_socket\fR ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1PRNGD\s0 is the Pseudo Random Number Generator Daemon.
It offers an \s-1EGD\s0 compatible interface to obtain random data and is
intended to be used as an entropy source to feed other software,
especially software based on OpenSSL.
.PP
Like \s-1EGD\s0 (http://sourceforge.net/projects/egd/) it calls system programs
to collect entropy.  Unlike \s-1EGD\s0 it does not generate a pool of random
bits that can be called from other software.
.PP
Rather it feeds the bits gathered into its internal \s-1PRNG\s0 from which
the \*(L"random bits\*(R" are obtained when requested. This way, \s-1PRNGD\s0 is
never drained and can never block (unlike \s-1EGD\s0), so it is also suitable
to seed inetd-started programs.
.PP
It also features a seed-save file, so that it is immediately usable
after system start.
.SH "USAGE"
.IX Header "USAGE"
Startup \- (reads the seed file)
 /usr/local/bin/prngd [other options] /var/run/egd-pool
.PP
Clean shutdown \- (saves current data to the seed file)
 /usr/local/bin/prngd \-\-kill /var/run/egd-pool
.PP
The above line should be added to the system startup files so that
prngd starts up before any program that would query the random data
socket, such as OpenSSH.
.PP
\&\s-1PRNGD\s0 supports both \s-1UNIX\s0 sockets (as shown in the examples) as well as
\&\s-1TCP\s0 sockets (localhost only!). There is no port number registered (yet),
so pick a free port on your system, e.g. 708 when running with root perms
and you want to offer it as a system service, or 4840 without root perms.
.PP
Both ports are not assigned to any service as of
 http://www.isi.edu/in-notes/iana/assignments/port-numbers
.PP
To have \s-1PRNGD\s0 listen on both the Unix socket and \s-1TCP\s0 do
 prngd [other options] /var/run/egd-pool tcp/localhost:708 tcp/localhost:4840
.PP
You should add these lines to /etc/services: (substitute your chosen ports)
 prngd         708/tcp     # prngd/EGD system service
 prngd-user    4840/tcp    # prngd/EGD user service
.PP
\&\s-1PRNGD\s0 itself by now only handles numerical port numbers.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\s-1PRNGD\s0 has the following options:
.Ip "\-c / \-\-cmdfile file" 4
.IX Item "-c / --cmdfile file"
Read the entropy gathering commands from \*(L"file\*(R" instead of reading from
the compiled in default location.
.Ip "\-d / \-\-debug" 4
.IX Item "-d / --debug"
Do not go into daemon (background) mode and print diagnostic messages to
stderr.
.Ip "\-f / \-\-fg" 4
.IX Item "-f / --fg"
Stay in foreground, do not fork. Do not print diagnostic messages. This
is e.g. usefull when using \s-1AIX\s0 System Resource Controller, so that
the resource controler could detect a crash of prngd.
.Ip "\-k / \-\-kill" 4
.IX Item "-k / --kill"
Kill the \fIdaemon\fR\|(s) at the locations given. It is possible to kill more than
one prngd at a time with this command. If several locations are given at
one time, prngd will try to contact them one after the other, query the
process id according to the \s-1EGD\s0 protocol and send a \s-1SIGTERM\s0 to the
process. As one daemon may server more than one socket, one may wish
to kill the daemon with the same argument that was used to start prngd.
The kill operation will however only succeed for the first socket, as
the daemon will be killed in the first attempt. prngd \-k ... will therefore
silently ignore the failure at the other \fIlocation\fR\|(s).
.Ip "\-m / \-\-mode mode" 4
.IX Item "-m / --mode mode"
Set the file access mode of the \s-1UNIX\s0 socket to be \*(L"mode\*(R". The mode is
set after creation of the socket. This option can be used to restrict
access to prngd. If more than one \s-1UNIX\s0 socket is served by prngd, the
same mode setting applies to all \s-1UNIX\s0 sockets. The mode must be given
in numeric notation, e.g. 777 for read and write and execute permission
for owner/group/other.
.Ip "\-n / \-\-no-seedfile" 4
.IX Item "-n / --no-seedfile"
Do not read from any seedfile and do not create a seedfile or write to
any seedfile.
.Ip "\-p / \-\-pidfile file" 4
.IX Item "-p / --pidfile file"
Write the pid of the prngd process into the specified file. If this option
is not explicitly used, no pid-file will be written, as prngd \-k can be
used to kill a running prngd.
.Ip "\-s / \-\-seedfile file" 4
.IX Item "-s / --seedfile file"
Location of the seedfile. The file is read at startup to initially
seed the \s-1PRNG\s0. On clean shutdown entropy is retrieved from the pool
and written back to the file. If no location is given, the compiled in
location of the seedfile is used. If the seedfile does not exist on startup,
it is created automatically.
.Ip "\-v / \-\-version" 4
.IX Item "-v / --version"
Print the version of prngd and exit.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.SH "AUTHOR/LICENSE"
.IX Header "AUTHOR/LICENSE"
Author: Lutz Jaenicke <Lutz.Jaenicke@aet.TU-Cottbus.DE>
.PP
This software is free. You can do with it whatever you want.
I would however kindly ask you to acknowledge the use of this
package, if you are going use it in your software, which you might
be going to distribute. I would also like to receive a note if you
are a satisfied user :\-)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1PRNGD\s0 Home Page:
  http://www.aet.tu-cottbus.de/personen/jaenicke/postfix_tls/prngd.html
.PP
Related Sites:
  http://sourceforge.net/projects/egd/
  http://www.openssh.org/
  http://www.openssl.org/
